// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/jpat/jpat.proto

package jpat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1991f7b5beaea4bd, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthReply struct {
	Socket               string   `protobuf:"bytes,1,opt,name=socket,proto3" json:"socket,omitempty"`
	Expiration           int64    `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthReply) Reset()         { *m = AuthReply{} }
func (m *AuthReply) String() string { return proto.CompactTextString(m) }
func (*AuthReply) ProtoMessage()    {}
func (*AuthReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1991f7b5beaea4bd, []int{1}
}

func (m *AuthReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthReply.Unmarshal(m, b)
}
func (m *AuthReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthReply.Marshal(b, m, deterministic)
}
func (m *AuthReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthReply.Merge(m, src)
}
func (m *AuthReply) XXX_Size() int {
	return xxx_messageInfo_AuthReply.Size(m)
}
func (m *AuthReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthReply.DiscardUnknown(m)
}

var xxx_messageInfo_AuthReply proto.InternalMessageInfo

func (m *AuthReply) GetSocket() string {
	if m != nil {
		return m.Socket
	}
	return ""
}

func (m *AuthReply) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "jpat.AuthRequest")
	proto.RegisterType((*AuthReply)(nil), "jpat.AuthReply")
}

func init() {
	proto.RegisterFile("pkg/jpat/jpat.proto", fileDescriptor_1991f7b5beaea4bd)
}

var fileDescriptor_1991f7b5beaea4bd = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xc8, 0x4e, 0xd7,
	0xcf, 0x2a, 0x48, 0x2c, 0x01, 0x13, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6,
	0x92, 0x32, 0x17, 0xb7, 0x63, 0x69, 0x49, 0x46, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90,
	0x08, 0x17, 0x6b, 0x49, 0x7e, 0x76, 0x6a, 0x9e, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84,
	0xa3, 0xe4, 0xcc, 0xc5, 0x09, 0x51, 0x54, 0x90, 0x53, 0x29, 0x24, 0xc6, 0xc5, 0x56, 0x9c, 0x9f,
	0x9c, 0x9d, 0x5a, 0x02, 0x55, 0x03, 0xe5, 0x09, 0xc9, 0x71, 0x71, 0xa5, 0x56, 0x14, 0x64, 0x16,
	0x25, 0x96, 0x64, 0xe6, 0xe7, 0x49, 0x30, 0x29, 0x30, 0x6a, 0x30, 0x07, 0x21, 0x89, 0x18, 0x39,
	0x71, 0xb1, 0x78, 0x15, 0x24, 0x96, 0x08, 0x59, 0x71, 0x89, 0x40, 0x6d, 0x03, 0x99, 0x99, 0x5f,
	0x94, 0x59, 0x05, 0x96, 0x17, 0x12, 0xd4, 0x03, 0x3b, 0x0e, 0xc9, 0x35, 0x52, 0xfc, 0xc8, 0x42,
	0x05, 0x39, 0x95, 0x4e, 0xd2, 0x51, 0x92, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9,
	0xb9, 0xfa, 0xb9, 0x99, 0xc9, 0x45, 0x99, 0xc9, 0x25, 0xf9, 0x45, 0x60, 0x6f, 0x25, 0xb1, 0x81,
	0xfd, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x8c, 0xbc, 0x1d, 0xee, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JpatClient is the client API for Jpat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JpatClient interface {
	RequestAuthorization(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error)
}

type jpatClient struct {
	cc grpc.ClientConnInterface
}

func NewJpatClient(cc grpc.ClientConnInterface) JpatClient {
	return &jpatClient{cc}
}

func (c *jpatClient) RequestAuthorization(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error) {
	out := new(AuthReply)
	err := c.cc.Invoke(ctx, "/jpat.Jpat/RequestAuthorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JpatServer is the server API for Jpat service.
type JpatServer interface {
	RequestAuthorization(context.Context, *AuthRequest) (*AuthReply, error)
}

// UnimplementedJpatServer can be embedded to have forward compatible implementations.
type UnimplementedJpatServer struct {
}

func (*UnimplementedJpatServer) RequestAuthorization(ctx context.Context, req *AuthRequest) (*AuthReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestAuthorization not implemented")
}

func RegisterJpatServer(s *grpc.Server, srv JpatServer) {
	s.RegisterService(&_Jpat_serviceDesc, srv)
}

func _Jpat_RequestAuthorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JpatServer).RequestAuthorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jpat.Jpat/RequestAuthorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JpatServer).RequestAuthorization(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jpat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jpat.Jpat",
	HandlerType: (*JpatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestAuthorization",
			Handler:    _Jpat_RequestAuthorization_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/jpat/jpat.proto",
}
